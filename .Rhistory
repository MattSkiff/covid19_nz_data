6),rep("med",6),rep("steep",6))
n2$Variable <- c(rep("BD",12),rep("pH",12),rep("OP",12),rep("OC",12),rep("TN",
12),rep("SW",12))
n2$Vars <- factor(n2$Variable, labels= c( 'bulk density (Mg/m^3)',"soil
organic C ('%')", "Olsen P ( \u03BCg/ml)","soil pH", 'volumetric water content
\n (v/v average of first 30 days)',"soil total N"))
n2$var <- rnorm(72,1,0.1)
n2 <- as.data.frame(n2)
pall <- ggplot(n2, aes(x=LowHill, y=var)) + geom_jitter(width=0.2,height=0)
pall <- pall + geom_boxplot()
pall <- pall + theme_bw() + ylab(" ")
pall <- pall + facet_grid(Vars~Animal,
scales="free_y",labeller=labeller(type=label_parsed ))
pall <- pall + theme(strip.text.y = element_text(angle=0))
pall
pall <- ggplot(n2, aes(x=LowHill, y=var)) + geom_jitter(width=0.2,height=0)
pall <- pall + geom_boxplot()
pall <- pall + theme_bw() + ylab(" ")
pall <- pall + facet_grid(Vars~Animal,
scales="free_y",labeller=labeller(type=label_parsed ))
pall <- pall + theme(strip.text.y = element_text(angle=0))
pall
n2 <- NULL
n2$Animal <- c(rep("cattle",36),rep("sheep",36))
n2$LowHill <- c(rep("low",6),rep("med",6),rep("steep",6),rep("low",
6),rep("med",6),rep("steep",6),
rep("low",6),rep("med",6),rep("steep",6),rep("low",
6),rep("med",6),rep("steep",6))
n2$Variable <- c(rep("BD",12),rep("pH",12),rep("OP",12),rep("OC",12),rep("TN",
12),rep("SW",12))
n2$Vars <- factor(n2$Variable, labels= c( 'bulk~density~(Mg/
m^3)',"soil~organic~C~('%')", "Olsen~P~( \u03BCg/ml)","soil~pH",
'volumetric~water~content~\n~(v/v~average~of~first~30~days)',"soil~total~N"))
n2$var <- rnorm(72,1,0.1)
n2 <- as.data.frame(n2)
pall <- ggplot(n2, aes(x=LowHill, y=var)) + geom_jitter(width=0.2,height=0)
pall <- pall + geom_boxplot()
pall <- pall + theme_bw() + ylab(" ")
pall <- pall + facet_grid(Vars~Animal, scales="free_y",labeller=label_parsed )
pall <- pall + theme(strip.text.y = element_text(angle=0))
pall
#####################################
n2 <- NULL
n2$Animal <- c(rep("cattle",36),rep("sheep",36))
n2$LowHill <- c(rep("low",6),rep("med",6),rep("steep",6),rep("low",
6),rep("med",6),rep("steep",6),
rep("low",6),rep("med",6),rep("steep",6),rep("low",
6),rep("med",6),rep("steep",6))
n2$Variable <- c(rep("BD",12),rep("pH",12),rep("OP",12),rep("OC",12),rep("TN",
12),rep("SW",12))
n2$Vars <- factor(n2$Variable, labels= c( 'bulk density (Mg/m^3)',"soil
organic C ('%')", "Olsen P ( \u03BCg/ml)","soil pH", 'volumetric water content
\n (v/v average of first 30 days)',"soil total N"))
n2$var <- rnorm(72,1,0.1)
n2 <- as.data.frame(n2)
pall <- ggplot(n2, aes(x=LowHill, y=var)) + geom_jitter(width=0.2,height=0)
pall <- pall + geom_boxplot()
pall <- pall + theme_bw() + ylab(" ")
pall <- pall + facet_grid(Vars~Animal,
scales="free_y",labeller=labeller(type=label_parsed ))
pall <- pall + theme(strip.text.y = element_text(angle=0))
pall
pall <- ggplot(n2, aes(x=LowHill, y=var)) + geom_jitter(width=0.2,height=0)
pall <- pall + geom_boxplot()
pall <- pall + theme_bw() + ylab(" ")
pall <- pall + facet_grid(Vars~Animal,
scales="free_y",labeller=labeller(type=label_parsed ))
pall <- pall + theme(strip.text.y = element_text(angle=0))
pall
shiny::runApp('C:/Users/skiff/covid19_nz_data')
runApp('C:/Users/skiff/covid19_nz_data')
runApp('C:/Users/skiff/covid19_nz_data')
url <- "https://www.health.govt.nz/our-work/diseases-and-conditions/covid-19-novel-coronavirus/covid-19-current-cases/covid-19-current-cases-details"
#<- url %>%
covid.ls <- read_html(url) %>% # "23_03_2020.html" # for static
html_table()
covid.df <- covid.ls[[1]]
covid_p.df <- covid.ls[[2]]
#	covid_p.df$Case <- paste(covid_p.df$Case,"probable")
covid.df <- rbind(covid.df,covid_p.df)
covid.df$Gender <- covid.df$Sex
covid.df$Gender[covid.df$Gender == ""] <- "Not Reported"
covid.df$Gender <- as.factor(covid.df$Gender)
levels(covid.df$Gender)[levels(covid.df$Gender) == ""] <- "Not Reported"
levels(covid.df$DHB)[levels(covid.df$DHB) == ""] <- "Not Reported"
covid.df$DHB[covid.df$DHB == "TBC"] <- "Not Reported"
covid.df$Age <- as.character(covid.df$`Age group`)
covid.df$Age[covid.df$Age == ""] <- "Not Reported"
covid.df$Age[covid.df$Age == "Teen"] <- "Teens"
covid.df$Age[covid.df$Age == "Unknown"] <- "Not Reported"
covid.df$Age <- as.factor(covid.df$Age)
levels(covid.df$Age)[levels(covid.df$Age) == "Not provided"] <- "Not Reported"
covid.df <- covid.df %>%  mutate(Gender = recode(Gender,
`Male` = "M",
`Female` = "F",
`Not provided` = "Not Reported"))
# sort levels by frequency of DHB
covid.df$DHB <- fct_recode(covid.df$DHB, c("Hawkes Bay" = "Hawkeâ€™s Bay"))
covid.df$DHB <- fct_infreq(covid.df$DHB, ordered = NA)
covid.df$Age <- fct_recode(covid.df$Age, c("60s" = "64")) #fct_infreq(covid.df$Age, ordered = NA)
#write.csv(covid.df,"covid19.csv")
#write.csv(covid.df,"covid19.csv")
covid.df$Age <- fct_relevel(covid.df$Age, c("Not Reported","Child","Teens","20s","30s","40s","50s","60s","70s","80s"))
#fct_infreq(covid.df$Age, ordered = NA)
#write.csv(covid.df,"covid19.csv")
covid.df
covid_ts.df  <- covid.df
covid_ts.df %>% group_by(`Report Date`) %>% tally()
ts.df <- covid.df
ts.df %<>% group_by(`Report Date`) %>% tally()
ts.df
runApp('C:/Users/skiff/covid19_nz_data')
ts.df <- covid.df
ts.df %<>% group_by(`Report Date`) %>% tally() %>% mutate(Cumulative_Sum = cumsum(n))
ts.df
print(ts.df)
runApp('C:/Users/skiff/covid19_nz_data')
ts.df
runApp('C:/Users/skiff/covid19_nz_data')
nc.df
nc.df <- covid.df
nc.df %<>% group_by(`Report Date`) %>% tally()
nc.df$`Report Date`
class(nc.df$`Report Date`)
nc.df$`Report Date` <- as.Date(nc.df[,1],
format = "%m/%d/%y")
library(lubridate)
as_date(nc.df[,1],
format = "%m/%d/%y")
nc.df$`Report Date`
nc.df$`Report Date` <- as_date(nc.df[,1],
format = "%d/%m/%y")
nc.df[,1]
nc.df$`Report Date` <- as_date(nc.df[,1],
format = "%dd/%mm/%yyyy")
nc.df$`Report Date` <- as_date(as.character(nc.df$`Report Date`),
format = "%dd/%mm/%yyyy")
nc.df$`Report Date` <- as_date(as.character(nc.df$`Report Date`),
format = "%d/%m/%y")
nc.df$`Report Date` <- as.Date(as.character(nc.df$`Report Date`),
format = "%d/%m/%y")
runApp('C:/Users/skiff/covid19_nz_data')
nc.df <- covid.df
nc.df %<>% group_by(`Report Date`) %>% tally()
nc.df$`Report Date` <- as.Date(as.character(nc.df$`Report Date`),
format = "%d/%m/%y")
ggplot(data = nc.df) +
geom_col(mapping = aes(x = `Report Date`,y = n,group = 1)) +
labs(title = "NZ COVID19: New cases",subtitle = paste(Sys.time(),Sys.timezone()),x = "Date",y = "Number of new cases") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1,size = text_size)) +
scale_x_date(breaks = seq(min(nc.df$`Report Date`), max(nc.df$`Report Date`), by = "2 day"), minor_breaks = "1 day") #+
covid.df$`Report Date`
max(covid.df$`Report Date`)
runApp('C:/Users/skiff/covid19_nz_data')
url <- "https://www.health.govt.nz/our-work/diseases-and-conditions/covid-19-novel-coronavirus/covid-19-current-cases/covid-19-current-cases-details"
#<- url %>%
covid.ls <- read_html(url) %>% # "23_03_2020.html" # for static
html_table()
covid.df <- covid.ls[[1]]
covid_p.df <- covid.ls[[2]]
url <- "https://www.health.govt.nz/our-work/diseases-and-conditions/covid-19-novel-coronavirus/covid-19-current-cases/covid-19-current-cases-details"
#<- url %>%
covid.ls <- read_html(url) %>% # "23_03_2020.html" # for static
html_table()
covid.ls <- read_html(url) %>% # "23_03_2020.html" # for static
html_table()
url <- "https://www.health.govt.nz/our-work/diseases-and-conditions/covid-19-novel-coronavirus/covid-19-current-cases/covid-19-current-cases-details"
scrape_table <- function(url){
link %>%
read_html() %>%
html_table()
}
covid.ls <- possibly(url, otherwise = NULL)
library(purrr)
url <- "https://www.health.govt.nz/our-work/diseases-and-conditions/covid-19-novel-coronavirus/covid-19-current-cases/covid-19-current-cases-details"
scrape_table <- function(url){
link %>%
read_html() %>%
html_table()
}
covid.ls <- possibly(url, otherwise = NULL)
covid.ls
covid.ls
ovid.df <- covid.ls[[1]]
covid_p.df <- covid.ls[[2]]
url <- "https://www.health.govt.nz/our-work/diseases-and-conditions/covid-19-novel-coronavirus/covid-19-current-cases/covid-19-current-cases-details"
scrape_table <- function(url){
url %>%
read_html() %>%
html_table()
}
covid.ls <- possibly(url, otherwise = NULL)
covid.ls
url <- "https://www.health.govt.nz/our-work/diseases-and-conditions/covid-19-novel-coronavirus/covid-19-current-cases/covid-19-current-cases-details"
scrape_table <- function(link){
link %>%
read_html() %>%
html_table()
}
covid.ls <- possibly(url, otherwise = NULL)
covid.ls
url <- "https://www.health.govt.nz/our-work/diseases-and-conditions/covid-19-novel-coronavirus/covid-19-current-cases/covid-19-current-cases-details"
url %>%
read_html() %>%
html_table()
read_excel
library(readxl)
excel_file <- "moh_data.xlsx"
covid.df <- read_excel(excel_file, sheet = 1, col_names = TRUE, na = "", skip = 0)
covid_p.df <- read_excel(excel_file, sheet = 2, col_names = TRUE, na = "", skip = 0)
setwd("C:/Users/skiff/covid19_nz_data")
covid.df <- read_excel(excel_file, sheet = 1, col_names = TRUE, na = "", skip = 0)
covid_p.df <- read_excel(excel_file, sheet = 2, col_names = TRUE, na = "", skip = 0)
covid.df
covid.df <- rbind(covid.df,covid_p.df)
runApp()
url <- "https://www.health.govt.nz/our-work/diseases-and-conditions/covid-19-novel-coronavirus/covid-19-current-situation/covid-19-current-cases"
#<- url %>%
covid.ls <- read_html(url) %>% # "23_03_2020.html" # for static
html_table()
core_stats.df <- covid.ls[[1]]
runApp()
core_stats.df
url <- "https://www.health.govt.nz/our-work/diseases-and-conditions/covid-19-novel-coronavirus/covid-19-current-situation/covid-19-current-cases"
#<- url %>%
covid.ls <- read_html(url) %>% # "23_03_2020.html" # for static
html_table()
core_stats.df <- covid.ls[[1]]
url <- "https://www.health.govt.nz/our-work/diseases-and-conditions/covid-19-novel-coronavirus/covid-19-current-situation/covid-19-current-cases"
#<- url %>%
covid.ls <- read_html(url) %>% # "23_03_2020.html" # for static
html_table()
core_stats.df <- covid.ls[[1]]
core_stats.df
class(core_stats.df)
runApp()
runApp()
covid.df$Age
covid.df <- read_excel(excel_file, sheet = 1, col_names = TRUE, na = "", skip = 0)
covid_p.df <- read_excel(excel_file, sheet = 2, col_names = TRUE, na = "", skip = 0)
#	covid_p.df$Case <- paste(covid_p.df$Case,"probable")
covid.df <- rbind(covid.df,covid_p.df)
covid.df$Gender <- covid.df$Sex
covid.df$Gender[covid.df$Gender == ""] <- "Not Reported"
covid.df$Gender <- as.factor(covid.df$Gender)
levels(covid.df$Gender)[levels(covid.df$Gender) == ""] <- "Not Reported"
levels(covid.df$DHB)[levels(covid.df$DHB) == ""] <- "Not Reported"
covid.df$DHB[covid.df$DHB == "TBC"] <- "Not Reported"
covid.df$Age <- as.character(covid.df$`Age group`)
covid.df$Age[covid.df$Age == ""] <- "Not Reported"
covid.df$Age[covid.df$Age == "Teen"] <- "Teens"
covid.df$Age[covid.df$Age == "Unknown"] <- "Not Reported"
covid.df$Age <- as.factor(covid.df$Age)
levels(covid.df$Age)[levels(covid.df$Age) == "Not provided"] <- "Not Reported"
covid.df$Age
levles(covid.df$Age)
levels(covid.df$Age)
runApp()
covid.df <- read_excel(excel_file, sheet = 1, col_names = TRUE, na = "", skip = 0)
runApp()
cities.df <- read.csv('worldcities.csv')
geo.df <- covid.df
geo.df
geo.df <- covid.df
covid.df <- read_excel(excel_file, sheet = 1, col_names = TRUE, na = "", skip = 0)
covid_p.df <- read_excel(excel_file, sheet = 2, col_names = TRUE, na = "", skip = 0)
#	covid_p.df$Case <- paste(covid_p.df$Case,"probable")
covid.df <- rbind(covid.df,covid_p.df)
covid.df$Gender <- covid.df$Sex
covid.df$Gender[covid.df$Gender == ""] <- "Not Reported"
covid.df$Gender <- as.factor(covid.df$Gender)
levels(covid.df$Gender)[levels(covid.df$Gender) == ""] <- "Not Reported"
levels(covid.df$DHB)[levels(covid.df$DHB) == ""] <- "Not Reported"
covid.df$DHB[covid.df$DHB == "TBC"] <- "Not Reported"
covid.df$Age <- as.character(covid.df$`Age group`)
covid.df$Age[covid.df$Age == ""] <- "Not Reported"
covid.df$Age[covid.df$Age == "Teen"] <- "Teens"
covid.df$Age[covid.df$Age == "Unknown"] <- "Not Reported"
covid.df$Age <- as.factor(covid.df$Age)
levels(covid.df$Age)[levels(covid.df$Age) == "Not provided"] <- "Not Reported"
covid.df <- covid.df %>%  mutate(Gender = recode(Gender,
`Male` = "M",
`Female` = "F",
`Not provided` = "Not Reported"))
# sort levels by frequency of DHB
covid.df$DHB <- fct_recode(covid.df$DHB, c("Hawkes Bay" = "Hawkeâ€™s Bay"))
covid.df$DHB <- fct_infreq(covid.df$DHB, ordered = NA)
covid.df$Age <- fct_recode(covid.df$Age, c("60s" = "64")) #fct_infreq(covid.df$Age, ordered = NA)
#write.csv(covid.df,"covid19.csv")
#write.csv(covid.df,"covid19.csv")
covid.df$Age <- fct_relevel(covid.df$Age, c("<1",
"1 to 4",
"5 to 9",
"10 to 14",
"15 to 19",
"20 to 29",
"30 to 39",
"40 to 49",
"50 to 59",
"60 to 69",
"70+",
"Not Reported"))
#fct_infreq(covid.df$Age, ordered = NA)
#write.csv(covid.df,"covid19.csv")
covid.df
covid.df <- read_excel(excel_file, sheet = 1, col_names = TRUE, na = "", skip = 0)
covid_p.df <- read_excel(excel_file, sheet = 2, col_names = TRUE, na = "", skip = 0)
#	covid_p.df$Case <- paste(covid_p.df$Case,"probable")
excel_file <- "moh_data.xlsx"
covid.df <- read_excel(excel_file, sheet = 1, col_names = TRUE, na = "", skip = 0)
covid_p.df <- read_excel(excel_file, sheet = 2, col_names = TRUE, na = "", skip = 0)
#	covid_p.df$Case <- paste(covid_p.df$Case,"probable")
covid.df <- rbind(covid.df,covid_p.df)
covid.df$Gender <- covid.df$Sex
covid.df$Gender[covid.df$Gender == ""] <- "Not Reported"
covid.df$Gender <- as.factor(covid.df$Gender)
levels(covid.df$Gender)[levels(covid.df$Gender) == ""] <- "Not Reported"
levels(covid.df$DHB)[levels(covid.df$DHB) == ""] <- "Not Reported"
covid.df$DHB[covid.df$DHB == "TBC"] <- "Not Reported"
covid.df$Age <- as.character(covid.df$`Age group`)
covid.df$Age[covid.df$Age == ""] <- "Not Reported"
covid.df$Age[covid.df$Age == "Teen"] <- "Teens"
covid.df$Age[covid.df$Age == "Unknown"] <- "Not Reported"
covid.df$Age <- as.factor(covid.df$Age)
levels(covid.df$Age)[levels(covid.df$Age) == "Not provided"] <- "Not Reported"
covid.df <- covid.df %>%  mutate(Gender = recode(Gender,
`Male` = "M",
`Female` = "F",
`Not provided` = "Not Reported"))
# sort levels by frequency of DHB
covid.df$DHB <- fct_recode(covid.df$DHB, c("Hawkes Bay" = "Hawkeâ€™s Bay"))
covid.df$DHB <- fct_infreq(covid.df$DHB, ordered = NA)
covid.df$Age <- fct_recode(covid.df$Age, c("60s" = "64")) #fct_infreq(covid.df$Age, ordered = NA)
#write.csv(covid.df,"covid19.csv")
#write.csv(covid.df,"covid19.csv")
covid.df$Age <- fct_relevel(covid.df$Age, c("<1",
"1 to 4",
"5 to 9",
"10 to 14",
"15 to 19",
"20 to 29",
"30 to 39",
"40 to 49",
"50 to 59",
"60 to 69",
"70+",
"Not Reported"))
#fct_infreq(covid.df$Age, ordered = NA)
#write.csv(covid.df,"covid19.csv")
covid.df
cities.df <- read.csv('worldcities.csv')
geo.df <- covid.df
sum(!geo.df$`Last City before NZ` == "")
# remove everything after comma
geo.df$`Last City before NZ` <- gsub(",.*","",geo.df$`Last City before NZ`)
geo.df[geo.df$`Last City before NZ` == "California",]$`Last City before NZ`  <- "Los Angeles"
joined.df <- left_join(geo.df,cities.df,by = c("Last City before NZ" = "city_ascii"))
joined.df %<>% na.omit()
keep.df <- rbind(
joined.df %>% filter(`Last City before NZ` == "Cairo" & country == "Egypt"),
joined.df %>% filter(`Last City before NZ` == "Dublin" & country == "Ireland"),
joined.df %>% filter(`Last City before NZ` == "Geneva" & admin_name == "Switzerland"),
joined.df %>% filter(`Last City before NZ` == "London" & admin_name == "United Kingdom"),
joined.df %>% filter(`Last City before NZ` == "Los Angeles" & admin_name == "California"),
joined.df %>% filter(`Last City before NZ` == "Manchester" & country == "United Kingdom"),
joined.df %>% filter(`Last City before NZ` == "Melbourne" & country == "Australia"),
joined.df %>% filter(`Last City before NZ` == "New York" & country == "United States"),
joined.df %>% filter(`Last City before NZ` == "Perth" & country == "Australia"),
joined.df %>% filter(`Last City before NZ` == "Paris" & country == "France"),
joined.df %>% filter(`Last City before NZ` == "San Francisco" & admin_name == "California"),
joined.df %>% filter(`Last City before NZ` == "Southampton" & country == "United Kingdom"),
joined.df %>% filter(`Last City before NZ` == "Sydney" & country == "Australia")
)
joined.df %<>% filter(
`Last City before NZ` %nin% c(
"Cairo",
"Dublin",
"Geneva",
"London",
"Los Angeles",
"Manchester",
"Melbourne",
"New York",
"Perth",
"Paris",
"San Francisco",
"Southampton",
"Sydney"))
joined.df <- rbind(joined.df,keep.df)
tally.df <- joined.df %>% group_by(`Last City before NZ`,lat,lng) %>% tally()
nz_lat.vec <- rep(-39.095963,nrow(tally.df))
nz_lng.vec <- rep(175.776594,nrow(tally.df))
nz_orig.df <- data.frame(lat = nz_lat.vec,
lng = nz_lng.vec,
line = seq_len(nrow(tally.df)),
`Last City before NZ` = rep("New Zealand",nrow(tally.df)),
id = seq_len(nrow(tally.df)))
tally.df$id <- seq_len(nrow(tally.df))
tally.df %<>% mutate(line = id) %>% select(lat,lng,line,`Last City before NZ`,id,n) %>% rename(Last.City.before.NZ = `Last City before NZ`)
nz_orig.df$n <- tally.df$n
lines.df <- rbind(as.data.frame(tally.df),nz_orig.df)
geo.df
countries.df <- read.csv('countries.csv')
countries.df
head(countries.df)
View(countries.df)
geo.df %<>% rename(Country = `Last country before return`)
geo.df %<>% rename(Country = `Last country before return`)
joined.df <- left_join(geo.df,countries.df,by = "Country")
countries.df
countries.df %<>%
select(Latitude,Longitude,name) %>%
rename(lat = Latitude,lng = Longitude,Country = name)
joined.df <- left_join(geo.df,countries.df,by = "Country")
runApp()
geo.df <- covid.df
geo.df %<>% rename(Country = `Last country before return`)
countries.df %<>%
select(Latitude,Longitude,name) %>%
rename(lat = Latitude,lng = Longitude,Country = name)
joined.df <- left_join(geo.df,countries.df,by = "Country")
tally.df <- joined.df %>% group_by(Country,lat,lng) %>% tally()
nz_lat.vec <- rep(-39.095963,nrow(tally.df))
nz_lng.vec <- rep(175.776594,nrow(tally.df))
nz_orig.df <- data.frame(lat = nz_lat.vec,
lng = nz_lng.vec,
line = seq_len(nrow(tally.df)),
Country = rep("New Zealand",nrow(tally.df)),
id = seq_len(nrow(tally.df)))
tally.df$id <- seq_len(nrow(tally.df))
tally.df %<>% mutate(line = id) %>% select(lat,lng,line,Country,id,n)
nz_orig.df$n <- tally.df$n
lines.df <- rbind(as.data.frame(tally.df),nz_orig.df)
lines.df
runApp()
lines.df
runApp()
joined.df <- left_join(geo.df,countries.df,by = "Country")
View(joined.df)
geo.df
!is.na(geo.df$Country)
sum(!is.na(geo.df$Country))
runApp()
runApp()
covid
covid.df <- read_excel(excel_file, sheet = 1, col_names = TRUE, na = "", skip = 0)
covid_p.df <- read_excel(excel_file, sheet = 2, col_names = TRUE, na = "", skip = 0)
covid.df <- rbind(covid.df,covid_p.df)
covid.df$Gender <- covid.df$Sex
covid.df$Gender[covid.df$Gender == ""] <- "Not Reported"
covid.df$Gender <- as.factor(covid.df$Gender)
levels(covid.df$Gender)[levels(covid.df$Gender) == ""] <- "Not Reported"
levels(covid.df$DHB)[levels(covid.df$DHB) == ""] <- "Not Reported"
covid.df$DHB[covid.df$DHB == "TBC"] <- "Not Reported"
covid.df$Age <- as.character(covid.df$`Age group`)
covid.df$Age[covid.df$Age == ""] <- "Not Reported"
covid.df$Age[covid.df$Age == "Teen"] <- "Teens"
covid.df$Age[covid.df$Age == "Unknown"] <- "Not Reported"
covid.df$Age <- as.factor(covid.df$Age)
levels(covid.df$Age)[levels(covid.df$Age) == "Not provided"] <- "Not Reported"
covid.df <- covid.df %>%  mutate(Gender = recode(Gender,
`Male` = "M",
`Female` = "F",
`Not provided` = "Not Reported"))
# sort levels by frequency of DHB
covid.df$DHB <- fct_recode(covid.df$DHB, c("Hawkes Bay" = "Hawkeâ€™s Bay"))
covid.df$DHB <- fct_infreq(covid.df$DHB, ordered = NA)
covid.df$Age <- fct_recode(covid.df$Age, c("60s" = "64")) #fct_infreq(covid.df$Age, ordered = NA)
#write.csv(covid.df,"covid19.csv")
#write.csv(covid.df,"covid19.csv")
covid.df$Age <- fct_relevel(covid.df$Age, c("<1",
"1 to 4",
"5 to 9",
"10 to 14",
"15 to 19",
"20 to 29",
"30 to 39",
"40 to 49",
"50 to 59",
"60 to 69",
"70+",
"Not Reported"))
#fct_infreq(covid.df$Age, ordered = NA)
#write.csv(covid.df,"covid19.csv")
covid.df
unique(covid.df$Sex)
covid_age.df <- covid.df
covid_age.df %>% group_by(Age) %>% tally()
covid_gender.df <- covid.df %>%
group_by(Gender) %>%
tally()
covid_gender.df <- covid.df %>%
group_by(Gender) %>%
tally() %>%
na.omit()
covid_gender.df
runApp()
rsconnect::deployApp(appName = "covid_nz",forceUpdate = T,launch.browser = F)
runApp()
lines.df
sum(lines.df$n)
sum(lines.df$n)/2
lines.df %<>% na.omit()
sum(lines.df$n)/2
geo.df$Country
sum(is.na(geo.df$Country))
runApp()
runApp()
rsconnect::deployApp(appName = "covid_nz",forceUpdate = T,launch.browser = F)
runApp()
rsconnect::deployApp(appName = "covid_nz",forceUpdate = T,launch.browser = F)
